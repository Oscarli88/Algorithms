'''
Created on Aug 6, 2014

@author: lee
'''

from heapq import heappush, heappop

f = open('Median.txt','r')
tmp = f.read()
f.close
data = [int(val) for val in tmp.split()]
out = [0 for x in range(len(data))]

def heapway(data, out):
    lheap = []
    rheap = []
    out[0] = data[0]
    temp = sorted(data[0:2])
    out[1] = temp[0]
    heappush(lheap, -temp[0])
    heappush(rheap, temp[1])
    for ind in range(2, len(data)):
        if data[ind] > rheap[0]:
            heappush(rheap, data[ind])
        else:
            heappush(lheap, -data[ind])
        
        if len(rheap) > len(lheap):
            heappush(lheap, -heappop(rheap))
        if len(lheap) > len(rheap) + 1:
            heappush(rheap, -heappop(lheap))
        
        out[ind] = -lheap[0]
    return sum(out)%10000
    
print(heapway(data, out))
            
