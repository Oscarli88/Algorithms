# variables:
#    input -- the array of items to be sorted; key(x) returns the key for item x
#    n -- the length of the input
#    k -- a number such that all keys are in the range(0, k-1)
#    count -- an array of ints, with indexes from 0 to k-1, initially all zero, represent the starting point of x such that 
#             key(x) = i
#    output -- an array of items, with indexes 0,...,n-1
#    x -- an individual input item, used within the algorithm
#    total, oldCount, i -- numbers used within the algorithm
 
# calculate the frequencies of each key:
count = [0 for x in range(k)]
output = [0 for x in range(len(input))]

for x in input:
    count[key(x)] += 1
 
# calculate the starting index for each key: count[i] denotes the starting point for x such that key(x)=i
total = 0
for i in range(k):  
    oldCount = count[i]
    count[i] = total
    total += oldCount
 
# copy to output array, preserving order of inputs with equal keys:
for x in input:
    output[count[key(x)]] = x
    count[key(x)] += 1
 
return output
