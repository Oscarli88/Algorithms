count = 0

def sub_partition(array, start, end, idx_pivot):   
    global count    
    if not (start <= idx_pivot <= end):
        raise ValueError('idx pivot must be between start and end')

    array[start], array[idx_pivot] = array[idx_pivot], array[start]
    pivot = array[start]
    i = start + 1
    j = start + 1

    while j <= end:
        if array[j] <= pivot:
            array[j], array[i] = array[i], array[j]
            i += 1
        j += 1

    array[start], array[i - 1] = array[i - 1], array[start]
    count = count + end - start
    return i - 1

def quicksort(array, start = 0, end=None):
    if end is None:
        end = len(array) - 1
    if end - start < 1:
        return
    
    a = array[start]
    b = array[end]
    c = array[len(array)//2]
    
    if (a > b and b > c) or (c > b and b > a):
        idx_pivot = end
    elif (a > c and c > b) or (b > c and c > a):
        idx_pivot = len(array)//2
    else:
        idx_pivot = start 
#       idx_pivot = end
    i = sub_partition(array, start, end, idx_pivot)
    quicksort(array, start, i - 1)
    quicksort(array, i + 1, end)
